syntax = "proto2";
package mraft;


import "metapb/metapb.proto";
import "gogoproto/gogo.proto";
import "github.com/coreos/etcd/raft/raftpb/raft.proto";

option (gogoproto.marshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.goproto_enum_prefix_all) = false;

enum SnapshotState {
    Accept   = 0;
    Reject   = 1;
    Received = 2;
}

message RaftMessage  {
    optional uint64           cellID      = 1 [(gogoproto.nullable) = false];
    optional metapb.Peer      fromPeer    = 2 [(gogoproto.nullable) = false];
    optional metapb.Peer      toPeer      = 3 [(gogoproto.nullable) = false];
    optional raftpb.Message   message     = 4 [(gogoproto.nullable) = false];
    optional metapb.CellEpoch cellEpoch   = 5 [(gogoproto.nullable) = false];
    // true means to_peer is a tombstone peer and it should remove itself.
    optional bool             isTombstone = 6 [(gogoproto.nullable) = false];
    // Cell key range [start_key, end_key).
    optional bytes            start       = 7;
    optional bytes            end         = 8;
}

message StoreIdent {
    optional uint64 clusterID = 1 [(gogoproto.nullable) = false];
    optional uint64 storeID   = 2 [(gogoproto.nullable) = false];
}

message ACKMessage {
    optional uint64 seq = 1 [(gogoproto.nullable) = false];
    optional uint64 to  = 2 [(gogoproto.nullable) = false];
}

message SnapshotMessageHeader {
    optional metapb.Cell   cell     = 1 [(gogoproto.nullable) = false];
    optional metapb.Peer   fromPeer = 2 [(gogoproto.nullable) = false];
    optional metapb.Peer   toPeer   = 3 [(gogoproto.nullable) = false];
    optional uint64        term     = 4 [(gogoproto.nullable) = false];
    optional uint64        index    = 5 [(gogoproto.nullable) = false];
    optional uint64        seq      = 6 [(gogoproto.nullable) = false];
}

message SnapshotMessage {
    optional SnapshotMessageHeader header   = 1 [(gogoproto.nullable) = false];
    optional SnapshotChunkMessage  chunk    = 2;
    optional SnapshotAckMessage    ack      = 3;
    optional SnapshotAskMessage    ask      = 4;
}

message SnapshotChunkMessage {
    optional bytes  data     = 1;
    optional bool   first    = 2 [(gogoproto.nullable) = false];
    optional bool   last     = 3 [(gogoproto.nullable) = false];
    optional uint64 fileSize = 4 [(gogoproto.nullable) = false];
    optional uint64 checkSum = 5 [(gogoproto.nullable) = false];
}

message SnapshotAckMessage {
    optional SnapshotState ack = 1 [(gogoproto.nullable) = false];
}

message SnapshotAskMessage {
}

enum PeerState {
    Normal       = 0;
    Applying     = 1;
    Tombstone    = 2;
}

message CellLocalState {
    optional PeerState   state  = 1 [(gogoproto.nullable) = false];
    optional metapb.Cell cell   = 2 [(gogoproto.nullable) = false];
}

message RaftLocalState {
    optional raftpb.HardState hardState = 1 [(gogoproto.nullable) = false];
    optional uint64           lastIndex = 2 [(gogoproto.nullable) = false];
}

message RaftTruncatedState {
    optional uint64 index = 1 [(gogoproto.nullable) = false];
    optional uint64 term  = 2 [(gogoproto.nullable) = false];
}

message RaftApplyState {
    optional uint64             applied_index   = 1 [(gogoproto.nullable) = false];
    optional RaftTruncatedState truncated_state = 2 [(gogoproto.nullable) = false];
}